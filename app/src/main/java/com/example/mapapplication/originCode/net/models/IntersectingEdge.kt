/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.example.mapapplication.originCode.net.models

import com.example.mapapplication.originCode.net.models.RoadClass
import com.example.mapapplication.originCode.net.models.Traversability
import com.google.gson.annotations.SerializedName

/**
 * 
 *
 * @param beginHeading The direction at the beginning of an edge. The units are degrees clockwise from north.
 * @param fromEdgeNameConsistency True if this intersecting edge at the end node has consistent names with the path from the other edge.
 * @param toEdgeNameConsistency True if this intersecting edge at the end node has consistent names with the path to the other edge.
 * @param driveability 
 * @param cyclability 
 * @param walkability 
 * @param use 
 * @param roadClass 
 */


data class IntersectingEdge (

    /* The direction at the beginning of an edge. The units are degrees clockwise from north. */
    @SerializedName("begin_heading")
    val beginHeading: kotlin.Int? = null,

    /* True if this intersecting edge at the end node has consistent names with the path from the other edge. */
    @SerializedName("from_edge_name_consistency")
    val fromEdgeNameConsistency: kotlin.Boolean? = null,

    /* True if this intersecting edge at the end node has consistent names with the path to the other edge. */
    @SerializedName("to_edge_name_consistency")
    val toEdgeNameConsistency: kotlin.Boolean? = null,

    @SerializedName("driveability")
    val driveability: Traversability? = null,

    @SerializedName("cyclability")
    val cyclability: Traversability? = null,

    @SerializedName("walkability")
    val walkability: Traversability? = null,

    @SerializedName("use")
    val use: EdgeUse? = null,

    @SerializedName("road_class")
    val roadClass: RoadClass? = null

)

