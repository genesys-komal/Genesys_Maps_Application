/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.example.mapapplication.originCode.net.models

import com.google.gson.annotations.SerializedName

/**
 * 
 *
 * @param description Contains the human-readable name for the returned result. For `establishment` results, this is usually the business name. This content is meant to be read as-is. Do not programmatically parse the formatted address.
 * @param matchedSubstrings A list of substrings that describe the location of the entered term in the prediction result text, so that the term can be highlighted if desired.
 * @param structuredFormatting 
 * @param terms Contains an array of terms identifying each section of the returned description (a section of the description is generally terminated with a comma). Each entry in the array has a `value` field, containing the text of the term, and an `offset` field, defining the start position of this term in the description, measured in Unicode characters.
 * @param placeId A textual identifier that uniquely identifies a place. To retrieve information about the place, pass this identifier in the placeId field of a Places API request.
 * @param reference (Deprecated) See place_id.
 * @param types Contains an array of types that apply to this place. For example: `[ \"political\", \"locality\" ]` or `[ \"establishment\", \"geocode\", \"beauty_salon\" ]`. The array can contain multiple values. Learn more about [Place types](https://developers.origins.com/maps/documentation/places/web-service/supported_types). 
 */


data class PlaceAutocompletePrediction (

    /* Contains the human-readable name for the returned result. For `establishment` results, this is usually the business name. This content is meant to be read as-is. Do not programmatically parse the formatted address. */
    @SerializedName("description")
    val description: kotlin.String,

    /* Contains the human-readable distance in meters for the returned result. */
    @SerializedName("distance_meters")
    val distanceMeters: kotlin.String,

    /* A list of substrings that describe the location of the entered term in the prediction result text, so that the term can be highlighted if desired. */
    @SerializedName("matched_substrings")
    val matchedSubstrings: kotlin.collections.List<PlaceAutocompleteMatchedSubstring>,

    @SerializedName("structured_formatting")
    val structuredFormatting: PlaceAutocompleteStructuredFormat,

    /* Contains an array of terms identifying each section of the returned description (a section of the description is generally terminated with a comma). Each entry in the array has a `value` field, containing the text of the term, and an `offset` field, defining the start position of this term in the description, measured in Unicode characters. */
    @SerializedName("terms")
    val terms: kotlin.collections.List<PlaceAutocompleteTerm>,

    /* A textual identifier that uniquely identifies a place. To retrieve information about the place, pass this identifier in the placeId field of a Places API request. */
    @SerializedName("place_id")
    val placeId: kotlin.String? = null,

    /* (Deprecated) See place_id. */
    @SerializedName("reference")
    val reference: kotlin.String? = null,

    /* Contains an array of types that apply to this place. For example: `[ \"political\", \"locality\" ]` or `[ \"establishment\", \"geocode\", \"beauty_salon\" ]`. The array can contain multiple values. Learn more about [Place types](https://developers.origins.com/maps/documentation/places/web-service/supported_types).  */
    @SerializedName("types")
    val types: kotlin.collections.List<kotlin.String>? = null

)

