/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.example.mapapplication.originCode.net.models


import com.google.gson.annotations.SerializedName

/**
 * 
 *
 * @param searchRadius The search radius, in meters, when trying to match each trace point.
 * @param gpsAccuracy The accuracy of the GPS, in meters.
 * @param breakageDistance The breaking distance, in meters, between trace points.
 * @param interpolationDistance The interpolation distance, in meters, beyond which trace points are merged together.
 * @param turnPenaltyFactor Penalizes turns from one road segment to next. For a pedestrian trace, you may see a back-and-forth motion along the streets of your path with the default settings. Try increasing the turn penalty factor to 500 to reduce jitter in the output. Note that if GPS accuracy is already good, increasing this above the default will usually negatively affect the quality of map matching.
 */


data class MapMatchTraceOptions (

    /* The search radius, in meters, when trying to match each trace point. */
    @SerializedName("search_radius")
    val searchRadius: kotlin.Int? = null,

    /* The accuracy of the GPS, in meters. */
    @SerializedName("gps_accuracy")
    val gpsAccuracy: kotlin.Double? = null,

    /* The breaking distance, in meters, between trace points. */
    @SerializedName("breakage_distance")
    val breakageDistance: kotlin.Double? = null,

    /* The interpolation distance, in meters, beyond which trace points are merged together. */
    @SerializedName("interpolation_distance")
    val interpolationDistance: kotlin.Double? = null,

    /* Penalizes turns from one road segment to next. For a pedestrian trace, you may see a back-and-forth motion along the streets of your path with the default settings. Try increasing the turn penalty factor to 500 to reduce jitter in the output. Note that if GPS accuracy is already good, increasing this above the default will usually negatively affect the quality of map matching. */
    @SerializedName("turn_penalty_factor")
    val turnPenaltyFactor: kotlin.Int? = null

)

