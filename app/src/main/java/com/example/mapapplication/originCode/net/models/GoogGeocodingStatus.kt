/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.example.mapapplication.originCode.net.models


import com.google.gson.annotations.SerializedName

/**
 * The `status` field within the Geocoding response object contains the status of the request, and may contain debugging information to help you track down why geocoding is not working. The \"status\" field may contain the following values:  - `OK` indicates that no errors occurred; the address was successfully parsed and at least one geocode was returned. - `ZERO_RESULTS` indicates that the geocode was successful but returned no results. This may occur if the geocoder was passed a non-existent address or a `latlng` in a remote location. - `OVER_DAILY_LIMIT` indicates any of the following:   - The API key is missing or invalid.   - Billing has not been enabled on your account.   - A self-imposed usage cap has been exceeded.   - The provided method of payment is no longer valid (for example, a credit card has expired). - `OVER_QUERY_LIMIT` indicates that you are over your quota. - `REQUEST_DENIED` indicates that your request was denied. - `INVALID_REQUEST` generally indicates that the query (address, components, or latlng) is missing. - `UNKNOWN_ERROR` indicates that the request could not be processed due to a server error. The request may succeed if you try again. 
 *
 * Values: OK,INVALID_REQUEST,OVER_DAILY_LIMIT,OVER_QUERY_LIMIT,REQUEST_DENIED,UNKNOWN_ERROR,ZERO_RESULTS
 */

enum class GoogGeocodingStatus(val value: kotlin.String) {

    @SerializedName(value = "OK")
    OK("OK"),

    @SerializedName(value = "INVALID_REQUEST")
    INVALID_REQUEST("INVALID_REQUEST"),

    @SerializedName(value = "OVER_DAILY_LIMIT")
    OVER_DAILY_LIMIT("OVER_DAILY_LIMIT"),

    @SerializedName(value = "OVER_QUERY_LIMIT")
    OVER_QUERY_LIMIT("OVER_QUERY_LIMIT"),

    @SerializedName(value = "REQUEST_DENIED")
    REQUEST_DENIED("REQUEST_DENIED"),

    @SerializedName(value = "UNKNOWN_ERROR")
    UNKNOWN_ERROR("UNKNOWN_ERROR"),

    @SerializedName(value = "ZERO_RESULTS")
    ZERO_RESULTS("ZERO_RESULTS");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is GoogGeocodingStatus) "$data" else null

        /**
         * Returns a valid [GoogGeocodingStatus] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): GoogGeocodingStatus? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

