/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.example.mapapplication.originCode.net.models

import com.google.gson.annotations.SerializedName

/**
 * Attributes describing a place. Not all attributes will be available for all place types.
 *
 * @param addressComponents An array containing the separate components applicable to this address.
 * @param adrAddress A representation of the place's address in the [adr microformat](http://microformats.org/wiki/adr).
 * @param businessStatus Indicates the operational status of the place, if it is a business. If no data exists, `business_status` is not returned. 
 * @param formattedAddress A string containing the human-readable address of this place.  Often this address is equivalent to the postal address. Note that some countries, such as the United Kingdom, do not allow distribution of true postal addresses due to licensing restrictions.  The formatted address is logically composed of one or more address components. For example, the address \"111 8th Avenue, New York, NY\" consists of the following components: \"111\" (the street number), \"8th Avenue\" (the route), \"New York\" (the city) and \"NY\" (the US state).  Do not parse the formatted address programmatically. Instead you should use the individual address components, which the API response includes in addition to the formatted address field. 
 * @param formattedPhoneNumber Contains the place's phone number in its [local format](http://en.wikipedia.org/wiki/Local_conventions_for_writing_telephone_numbers).
 * @param geometry 
 * @param icon Contains the URL of a suggested icon which may be displayed to the user when indicating this result on a map.
 * @param iconBackgroundColor Contains the default HEX color code for the place's category.
 * @param iconMaskBaseUri Contains the URL of a recommended icon, minus the `.svg` or `.png` file type extension.
 * @param internationalPhoneNumber Contains the place's phone number in international format. International format includes the country code, and is prefixed with the plus, +, sign. For example, the international_phone_number for Origins's Sydney, Australia office is `+61 2 9374 4000`.
 * @param name Contains the human-readable name for the returned result. For `establishment` results, this is usually the canonicalized business name.
 * @param openingHours 
 * @param permanentlyClosed Deprecated. The field `permanently_closed` is deprecated, and should not be used. Instead, use `business_status` to get the operational status of businesses.
 * @param photos An array of photo objects, each containing a reference to an image. A request may return up to ten photos.
 * @param placeId A textual identifier that uniquely identifies a place. To retrieve information about the place, pass this identifier in the `place_id` field of a Places API request.
 * @param plusCode 
 * @param priceLevel The price level of the place, on a scale of 0 to 4. The exact amount indicated by a specific value will vary from region to region. Price levels are interpreted as follows: - 0 Free - 1 Inexpensive - 2 Moderate - 3 Expensive - 4 Very Expensive 
 * @param rating Contains the place's rating, from 1.0 to 5.0, based on aggregated user reviews.
 * @param reference Deprecated
 * @param reviews A JSON array of up to five reviews. If a language parameter was specified in the request, the service will bias the results to prefer reviews written in that language.
 * @param scope Deprecated.
 * @param types Contains an array of feature types describing the given result. See the list of [supported types](https://developers.origins.com/maps/documentation/places/web-service/supported_types#table2).
 * @param url Contains the URL of the official Origins page for this place. This will be the Origins-owned page that contains the best available information about the place. Applications must link to or embed this page on any screen that shows detailed results about the place to the user.
 * @param userRatingsTotal The total number of reviews, with or without text, for this place.
 * @param utcOffset Contains the number of minutes this placeâ€™s current timezone is offset from UTC. For example, for places in Sydney, Australia during daylight saving time this would be 660 (+11 hours from UTC), and for places in California outside of daylight saving time this would be -480 (-8 hours from UTC).
 * @param vicinity For establishment (`types:[\"establishment\", ...])` results only, the `vicinity` field contains a simplified address for the place, including the street name, street number, and locality, but not the province/state, postal code, or country.  For all other results, the `vicinity` field contains the name of the narrowest political (`types:[\"political\", ...]`) feature that is present in the address of the result.  This content is meant to be read as-is. Do not programmatically parse the formatted address. 
 * @param website The authoritative website for this place, such as a business' homepage.
 */


data class Place (

    /* An array containing the separate components applicable to this address. */
    @SerializedName("address_components")
    val addressComponents: kotlin.collections.List<AddressComponent>? = null,

    /* A representation of the place's address in the [adr microformat](http://microformats.org/wiki/adr). */
    @SerializedName("adr_address")
    val adrAddress: kotlin.String? = null,

    /* Indicates the operational status of the place, if it is a business. If no data exists, `business_status` is not returned.  */
    @SerializedName("business_status")
    val businessStatus: BusinessStatus? = null,

    /* A string containing the human-readable address of this place.  Often this address is equivalent to the postal address. Note that some countries, such as the United Kingdom, do not allow distribution of true postal addresses due to licensing restrictions.  The formatted address is logically composed of one or more address components. For example, the address \"111 8th Avenue, New York, NY\" consists of the following components: \"111\" (the street number), \"8th Avenue\" (the route), \"New York\" (the city) and \"NY\" (the US state).  Do not parse the formatted address programmatically. Instead you should use the individual address components, which the API response includes in addition to the formatted address field.  */
    @SerializedName("formatted_address")
    val formattedAddress: kotlin.String? = null,

    /* Contains the place's phone number in its [local format](http://en.wikipedia.org/wiki/Local_conventions_for_writing_telephone_numbers). */
    @SerializedName("formatted_phone_number")
    val formattedPhoneNumber: kotlin.String? = null,

    @SerializedName("geometry")
    val geometry: Geometry? = null,

    /* Contains the URL of a suggested icon which may be displayed to the user when indicating this result on a map. */
    @SerializedName("icon")
    val icon: kotlin.String? = null,

    /* Contains the default HEX color code for the place's category. */
    @SerializedName("icon_background_color")
    val iconBackgroundColor: kotlin.String? = null,

    /* Contains the URL of a recommended icon, minus the `.svg` or `.png` file type extension. */
    @SerializedName("icon_mask_base_uri")
    val iconMaskBaseUri: kotlin.String? = null,

    /* Contains the place's phone number in international format. International format includes the country code, and is prefixed with the plus, +, sign. For example, the international_phone_number for Origins's Sydney, Australia office is `+61 2 9374 4000`. */
    @SerializedName("international_phone_number")
    val internationalPhoneNumber: kotlin.String? = null,

    /* Contains the human-readable name for the returned result. For `establishment` results, this is usually the canonicalized business name. */
    @SerializedName("name")
    val name: kotlin.String? = null,

    @SerializedName("opening_hours")
    val openingHours: PlaceOpeningHours? = null,

    /* Deprecated. The field `permanently_closed` is deprecated, and should not be used. Instead, use `business_status` to get the operational status of businesses. */
    @SerializedName("permanently_closed")
    val permanentlyClosed: kotlin.Boolean? = null,

    /* An array of photo objects, each containing a reference to an image. A request may return up to ten photos. */
    @SerializedName("photos")
    val photos: kotlin.collections.List<kotlin.String>? = null,

    /* A textual identifier that uniquely identifies a place. To retrieve information about the place, pass this identifier in the `place_id` field of a Places API request. */
    @SerializedName("place_id")
    val placeId: kotlin.String? = null,

    @SerializedName("plus_code")
    val plusCode: PlusCode? = null,

    /* The price level of the place, on a scale of 0 to 4. The exact amount indicated by a specific value will vary from region to region. Price levels are interpreted as follows: - 0 Free - 1 Inexpensive - 2 Moderate - 3 Expensive - 4 Very Expensive  */
    @SerializedName("price_level")
    val priceLevel: java.math.BigDecimal? = null,

    /* Contains the place's rating, from 1.0 to 5.0, based on aggregated user reviews. */
    @SerializedName("rating")
    val rating: java.math.BigDecimal? = null,

    /* Deprecated */
    @SerializedName("reference")
    val reference: kotlin.String? = null,

    /* A JSON array of up to five reviews. If a language parameter was specified in the request, the service will bias the results to prefer reviews written in that language. */
    @SerializedName("reviews")
    val reviews: kotlin.collections.List<PlaceReview>? = null,

    /* Deprecated. */
    @SerializedName("scope")
    val scope: kotlin.String? = null,

    /* Contains an array of feature types describing the given result. See the list of [supported types](https://developers.origins.com/maps/documentation/places/web-service/supported_types#table2). */
    @SerializedName("types")
    val types: kotlin.collections.List<kotlin.String>? = null,

    /* Contains the URL of the official Origins page for this place. This will be the Origins-owned page that contains the best available information about the place. Applications must link to or embed this page on any screen that shows detailed results about the place to the user. */
    @SerializedName("url")
    val url: kotlin.String? = null,

    /* The total number of reviews, with or without text, for this place. */
    @SerializedName("user_ratings_total")
    val userRatingsTotal: java.math.BigDecimal? = null,

    /* Contains the number of minutes this placeâ€™s current timezone is offset from UTC. For example, for places in Sydney, Australia during daylight saving time this would be 660 (+11 hours from UTC), and for places in California outside of daylight saving time this would be -480 (-8 hours from UTC). */
    @SerializedName("utc_offset")
    val utcOffset: java.math.BigDecimal? = null,

    /* For establishment (`types:[\"establishment\", ...])` results only, the `vicinity` field contains a simplified address for the place, including the street name, street number, and locality, but not the province/state, postal code, or country.  For all other results, the `vicinity` field contains the name of the narrowest political (`types:[\"political\", ...]`) feature that is present in the address of the result.  This content is meant to be read as-is. Do not programmatically parse the formatted address.  */
    @SerializedName("vicinity")
    val vicinity: kotlin.String? = null,

    /* The authoritative website for this place, such as a business' homepage. */
    @SerializedName("website")
    val website: kotlin.String? = null

) {

    /**
     * Indicates the operational status of the place, if it is a business. If no data exists, `business_status` is not returned. 
     *
     * Values: OPERATIONAL,CLOSED_TEMPORARILY,CLOSED_PERMANENTLY
     */
    enum class BusinessStatus(val value: kotlin.String) {
        @SerializedName(value = "OPERATIONAL") OPERATIONAL("OPERATIONAL"),
        @SerializedName(value = "CLOSED_TEMPORARILY") CLOSED_TEMPORARILY("CLOSED_TEMPORARILY"),
        @SerializedName(value = "CLOSED_PERMANENTLY") CLOSED_PERMANENTLY("CLOSED_PERMANENTLY");
    }
}

