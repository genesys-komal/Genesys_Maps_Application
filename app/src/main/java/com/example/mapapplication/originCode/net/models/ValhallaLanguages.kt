/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.example.mapapplication.originCode.net.models


import com.google.gson.annotations.SerializedName

/**
 * 
 *
 * Values: bgMinusBG,caMinusES,csMinusCZ,daMinusDK,deMinusDE,elMinusGR,enMinusGB,enMinusUSMinusXMinusPirate,enMinusUS,esMinusES,etMinusEE,fiMinusFI,frMinusFR,hiMinusIN,huMinusHU,itMinusIT,jaMinusJP,nbMinusNO,nlMinusNL,plMinusPL,ptMinusBR,ptMinusPT,roMinusRO,ruMinusRU,skMinusSK,slMinusSI,svMinusSE,trMinusTR,ukMinusUA
 */

enum class ValhallaLanguages(val value: kotlin.String) {

    @SerializedName(value = "bg-BG")
    bgMinusBG("bg-BG"),

    @SerializedName(value = "ca-ES")
    caMinusES("ca-ES"),

    @SerializedName(value = "cs-CZ")
    csMinusCZ("cs-CZ"),

    @SerializedName(value = "da-DK")
    daMinusDK("da-DK"),

    @SerializedName(value = "de-DE")
    deMinusDE("de-DE"),

    @SerializedName(value = "el-GR")
    elMinusGR("el-GR"),

    @SerializedName(value = "en-GB")
    enMinusGB("en-GB"),

    @SerializedName(value = "en-US-x-pirate")
    enMinusUSMinusXMinusPirate("en-US-x-pirate"),

    @SerializedName(value = "en-US")
    enMinusUS("en-US"),

    @SerializedName(value = "es-ES")
    esMinusES("es-ES"),

    @SerializedName(value = "et-EE")
    etMinusEE("et-EE"),

    @SerializedName(value = "fi-FI")
    fiMinusFI("fi-FI"),

    @SerializedName(value = "fr-FR")
    frMinusFR("fr-FR"),

    @SerializedName(value = "hi-IN")
    hiMinusIN("hi-IN"),

    @SerializedName(value = "hu-HU")
    huMinusHU("hu-HU"),

    @SerializedName(value = "it-IT")
    itMinusIT("it-IT"),

    @SerializedName(value = "ja-JP")
    jaMinusJP("ja-JP"),

    @SerializedName(value = "nb-NO")
    nbMinusNO("nb-NO"),

    @SerializedName(value = "nl-NL")
    nlMinusNL("nl-NL"),

    @SerializedName(value = "pl-PL")
    plMinusPL("pl-PL"),

    @SerializedName(value = "pt-BR")
    ptMinusBR("pt-BR"),

    @SerializedName(value = "pt-PT")
    ptMinusPT("pt-PT"),

    @SerializedName(value = "ro-RO")
    roMinusRO("ro-RO"),

    @SerializedName(value = "ru-RU")
    ruMinusRU("ru-RU"),

    @SerializedName(value = "sk-SK")
    skMinusSK("sk-SK"),

    @SerializedName(value = "sl-SI")
    slMinusSI("sl-SI"),

    @SerializedName(value = "sv-SE")
    svMinusSE("sv-SE"),

    @SerializedName(value = "tr-TR")
    trMinusTR("tr-TR"),

    @SerializedName(value = "uk-UA")
    ukMinusUA("uk-UA");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ValhallaLanguages) "$data" else null

        /**
         * Returns a valid [ValhallaLanguages] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ValhallaLanguages? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

