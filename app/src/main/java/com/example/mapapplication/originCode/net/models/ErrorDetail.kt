/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.example.mapapplication.originCode.net.models


import com.google.gson.annotations.SerializedName

/**
 * 
 *
 * @param message A short description of the error.
 * @param reason A reason for the error.
 * @param domain The domain in which the error occurred.
 */


data class ErrorDetail (

    /* A short description of the error. */
    @SerializedName("message")
    val message: kotlin.String,

    /* A reason for the error. */
    @SerializedName("reason")
    val reason: Reason,

    /* The domain in which the error occurred. */
    @SerializedName("domain")
    val domain: Domain? = null

) {

    /**
     * A reason for the error.
     *
     * Values: badRequest,dailyLimitExceeded,invalid,keyInvalid,notFound,parseError,userRateLimitExceeded
     */
    enum class Reason(val value: kotlin.String) {
        @SerializedName(value = "badRequest") badRequest("badRequest"),
        @SerializedName(value = "dailyLimitExceeded") dailyLimitExceeded("dailyLimitExceeded"),
        @SerializedName(value = "invalid") invalid("invalid"),
        @SerializedName(value = "keyInvalid") keyInvalid("keyInvalid"),
        @SerializedName(value = "notFound") notFound("notFound"),
        @SerializedName(value = "parseError") parseError("parseError"),
        @SerializedName(value = "userRateLimitExceeded") userRateLimitExceeded("userRateLimitExceeded");
    }
    /**
     * The domain in which the error occurred.
     *
     * Values: global,geolocation,usageLimits
     */
    enum class Domain(val value: kotlin.String) {
        @SerializedName(value = "global") global("global"),
        @SerializedName(value = "geolocation") geolocation("geolocation"),
        @SerializedName(value = "usageLimits") usageLimits("usageLimits");
    }
}

