// Generated by view binder compiler. Do not edit!
package com.example.mapapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mapapplication.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.mapbox.mapboxsdk.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView bottomView;

  @NonNull
  public final CardView containerSearch;

  @NonNull
  public final EditText editTextSearch;

  @NonNull
  public final TextView fabGetDirection;

  @NonNull
  public final FloatingActionButton fabRecenter;

  @NonNull
  public final FloatingActionButton fabStyles;

  @NonNull
  public final RelativeLayout frame;

  @NonNull
  public final AppCompatImageView imageSearch;

  @NonNull
  public final AppCompatImageView imageViewClose;

  @NonNull
  public final AppCompatImageView imageViewSearch;

  @NonNull
  public final TextView isochrone;

  @NonNull
  public final TextView lat;

  @NonNull
  public final TextView longitude;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final RecyclerView recyclerCategory;

  @NonNull
  public final RecyclerView recyclerViewSearch;

  @NonNull
  public final TextView timeDistance;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull CardView bottomView,
      @NonNull CardView containerSearch, @NonNull EditText editTextSearch,
      @NonNull TextView fabGetDirection, @NonNull FloatingActionButton fabRecenter,
      @NonNull FloatingActionButton fabStyles, @NonNull RelativeLayout frame,
      @NonNull AppCompatImageView imageSearch, @NonNull AppCompatImageView imageViewClose,
      @NonNull AppCompatImageView imageViewSearch, @NonNull TextView isochrone,
      @NonNull TextView lat, @NonNull TextView longitude, @NonNull MapView mapView,
      @NonNull RecyclerView recyclerCategory, @NonNull RecyclerView recyclerViewSearch,
      @NonNull TextView timeDistance) {
    this.rootView = rootView;
    this.bottomView = bottomView;
    this.containerSearch = containerSearch;
    this.editTextSearch = editTextSearch;
    this.fabGetDirection = fabGetDirection;
    this.fabRecenter = fabRecenter;
    this.fabStyles = fabStyles;
    this.frame = frame;
    this.imageSearch = imageSearch;
    this.imageViewClose = imageViewClose;
    this.imageViewSearch = imageViewSearch;
    this.isochrone = isochrone;
    this.lat = lat;
    this.longitude = longitude;
    this.mapView = mapView;
    this.recyclerCategory = recyclerCategory;
    this.recyclerViewSearch = recyclerViewSearch;
    this.timeDistance = timeDistance;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomView;
      CardView bottomView = ViewBindings.findChildViewById(rootView, id);
      if (bottomView == null) {
        break missingId;
      }

      id = R.id.container_search;
      CardView containerSearch = ViewBindings.findChildViewById(rootView, id);
      if (containerSearch == null) {
        break missingId;
      }

      id = R.id.edit_text_search;
      EditText editTextSearch = ViewBindings.findChildViewById(rootView, id);
      if (editTextSearch == null) {
        break missingId;
      }

      id = R.id.fab_get_direction;
      TextView fabGetDirection = ViewBindings.findChildViewById(rootView, id);
      if (fabGetDirection == null) {
        break missingId;
      }

      id = R.id.fab_recenter;
      FloatingActionButton fabRecenter = ViewBindings.findChildViewById(rootView, id);
      if (fabRecenter == null) {
        break missingId;
      }

      id = R.id.fab_styles;
      FloatingActionButton fabStyles = ViewBindings.findChildViewById(rootView, id);
      if (fabStyles == null) {
        break missingId;
      }

      id = R.id.frame;
      RelativeLayout frame = ViewBindings.findChildViewById(rootView, id);
      if (frame == null) {
        break missingId;
      }

      id = R.id.image_search;
      AppCompatImageView imageSearch = ViewBindings.findChildViewById(rootView, id);
      if (imageSearch == null) {
        break missingId;
      }

      id = R.id.image_view_close;
      AppCompatImageView imageViewClose = ViewBindings.findChildViewById(rootView, id);
      if (imageViewClose == null) {
        break missingId;
      }

      id = R.id.image_view_search;
      AppCompatImageView imageViewSearch = ViewBindings.findChildViewById(rootView, id);
      if (imageViewSearch == null) {
        break missingId;
      }

      id = R.id.isochrone;
      TextView isochrone = ViewBindings.findChildViewById(rootView, id);
      if (isochrone == null) {
        break missingId;
      }

      id = R.id.lat;
      TextView lat = ViewBindings.findChildViewById(rootView, id);
      if (lat == null) {
        break missingId;
      }

      id = R.id.longitude;
      TextView longitude = ViewBindings.findChildViewById(rootView, id);
      if (longitude == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.recycler_category;
      RecyclerView recyclerCategory = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCategory == null) {
        break missingId;
      }

      id = R.id.recycler_view_search;
      RecyclerView recyclerViewSearch = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSearch == null) {
        break missingId;
      }

      id = R.id.timeDistance;
      TextView timeDistance = ViewBindings.findChildViewById(rootView, id);
      if (timeDistance == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, bottomView, containerSearch,
          editTextSearch, fabGetDirection, fabRecenter, fabStyles, frame, imageSearch,
          imageViewClose, imageViewSearch, isochrone, lat, longitude, mapView, recyclerCategory,
          recyclerViewSearch, timeDistance);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
