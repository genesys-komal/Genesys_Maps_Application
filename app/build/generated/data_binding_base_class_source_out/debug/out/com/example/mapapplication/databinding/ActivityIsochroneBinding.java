// Generated by view binder compiler. Do not edit!
package com.example.mapapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mapapplication.R;
import com.mapbox.mapboxsdk.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityIsochroneBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout bicycleLayout;

  @NonNull
  public final ImageView bikeImage;

  @NonNull
  public final TextView bikeTime;

  @NonNull
  public final CardView bottomView;

  @NonNull
  public final ImageView busImage;

  @NonNull
  public final LinearLayout busLayout;

  @NonNull
  public final TextView busTime;

  @NonNull
  public final ImageView carImage;

  @NonNull
  public final LinearLayout carLayout;

  @NonNull
  public final TextView carTime;

  @NonNull
  public final CardView containerSearch;

  @NonNull
  public final TextView denoiseTextView;

  @NonNull
  public final EditText editTextSearch;

  @NonNull
  public final RelativeLayout frame;

  @NonNull
  public final TextView generalizeTextView;

  @NonNull
  public final AppCompatImageView imageSearch;

  @NonNull
  public final AppCompatImageView imageViewClose;

  @NonNull
  public final AppCompatImageView isoClose;

  @NonNull
  public final LinearLayout isochroneSetting;

  @NonNull
  public final TextView lat;

  @NonNull
  public final TextView longitude;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final ImageView pedistrianImage;

  @NonNull
  public final SeekBar rangeSeekBar;

  @NonNull
  public final EditText rangeTextView;

  @NonNull
  public final RecyclerView recyclerViewSearch;

  @NonNull
  public final SeekBar seekBarDenoise;

  @NonNull
  public final SeekBar seekBarGeneralize;

  @NonNull
  public final AppCompatImageView settingsIsochrone;

  @NonNull
  public final SeekBar stepSeekBar;

  @NonNull
  public final TextView stepTextView;

  @NonNull
  public final TextView stepTime;

  @NonNull
  public final EditText stepValue;

  @NonNull
  public final TextView timeDenoise;

  @NonNull
  public final TextView timeGeneralize;

  @NonNull
  public final LinearLayout topLayout;

  @NonNull
  public final ImageView truckImage;

  @NonNull
  public final LinearLayout truckLayout;

  @NonNull
  public final TextView truckTime;

  @NonNull
  public final EditText valueDenoise;

  @NonNull
  public final EditText valueGeneralize;

  @NonNull
  public final LinearLayout walkLayout;

  @NonNull
  public final TextView walkTime;

  private ActivityIsochroneBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout bicycleLayout, @NonNull ImageView bikeImage, @NonNull TextView bikeTime,
      @NonNull CardView bottomView, @NonNull ImageView busImage, @NonNull LinearLayout busLayout,
      @NonNull TextView busTime, @NonNull ImageView carImage, @NonNull LinearLayout carLayout,
      @NonNull TextView carTime, @NonNull CardView containerSearch,
      @NonNull TextView denoiseTextView, @NonNull EditText editTextSearch,
      @NonNull RelativeLayout frame, @NonNull TextView generalizeTextView,
      @NonNull AppCompatImageView imageSearch, @NonNull AppCompatImageView imageViewClose,
      @NonNull AppCompatImageView isoClose, @NonNull LinearLayout isochroneSetting,
      @NonNull TextView lat, @NonNull TextView longitude, @NonNull MapView mapView,
      @NonNull ImageView pedistrianImage, @NonNull SeekBar rangeSeekBar,
      @NonNull EditText rangeTextView, @NonNull RecyclerView recyclerViewSearch,
      @NonNull SeekBar seekBarDenoise, @NonNull SeekBar seekBarGeneralize,
      @NonNull AppCompatImageView settingsIsochrone, @NonNull SeekBar stepSeekBar,
      @NonNull TextView stepTextView, @NonNull TextView stepTime, @NonNull EditText stepValue,
      @NonNull TextView timeDenoise, @NonNull TextView timeGeneralize,
      @NonNull LinearLayout topLayout, @NonNull ImageView truckImage,
      @NonNull LinearLayout truckLayout, @NonNull TextView truckTime,
      @NonNull EditText valueDenoise, @NonNull EditText valueGeneralize,
      @NonNull LinearLayout walkLayout, @NonNull TextView walkTime) {
    this.rootView = rootView;
    this.bicycleLayout = bicycleLayout;
    this.bikeImage = bikeImage;
    this.bikeTime = bikeTime;
    this.bottomView = bottomView;
    this.busImage = busImage;
    this.busLayout = busLayout;
    this.busTime = busTime;
    this.carImage = carImage;
    this.carLayout = carLayout;
    this.carTime = carTime;
    this.containerSearch = containerSearch;
    this.denoiseTextView = denoiseTextView;
    this.editTextSearch = editTextSearch;
    this.frame = frame;
    this.generalizeTextView = generalizeTextView;
    this.imageSearch = imageSearch;
    this.imageViewClose = imageViewClose;
    this.isoClose = isoClose;
    this.isochroneSetting = isochroneSetting;
    this.lat = lat;
    this.longitude = longitude;
    this.mapView = mapView;
    this.pedistrianImage = pedistrianImage;
    this.rangeSeekBar = rangeSeekBar;
    this.rangeTextView = rangeTextView;
    this.recyclerViewSearch = recyclerViewSearch;
    this.seekBarDenoise = seekBarDenoise;
    this.seekBarGeneralize = seekBarGeneralize;
    this.settingsIsochrone = settingsIsochrone;
    this.stepSeekBar = stepSeekBar;
    this.stepTextView = stepTextView;
    this.stepTime = stepTime;
    this.stepValue = stepValue;
    this.timeDenoise = timeDenoise;
    this.timeGeneralize = timeGeneralize;
    this.topLayout = topLayout;
    this.truckImage = truckImage;
    this.truckLayout = truckLayout;
    this.truckTime = truckTime;
    this.valueDenoise = valueDenoise;
    this.valueGeneralize = valueGeneralize;
    this.walkLayout = walkLayout;
    this.walkTime = walkTime;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityIsochroneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityIsochroneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_isochrone, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityIsochroneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bicycleLayout;
      LinearLayout bicycleLayout = ViewBindings.findChildViewById(rootView, id);
      if (bicycleLayout == null) {
        break missingId;
      }

      id = R.id.bikeImage;
      ImageView bikeImage = ViewBindings.findChildViewById(rootView, id);
      if (bikeImage == null) {
        break missingId;
      }

      id = R.id.bikeTime;
      TextView bikeTime = ViewBindings.findChildViewById(rootView, id);
      if (bikeTime == null) {
        break missingId;
      }

      id = R.id.bottomView;
      CardView bottomView = ViewBindings.findChildViewById(rootView, id);
      if (bottomView == null) {
        break missingId;
      }

      id = R.id.busImage;
      ImageView busImage = ViewBindings.findChildViewById(rootView, id);
      if (busImage == null) {
        break missingId;
      }

      id = R.id.busLayout;
      LinearLayout busLayout = ViewBindings.findChildViewById(rootView, id);
      if (busLayout == null) {
        break missingId;
      }

      id = R.id.busTime;
      TextView busTime = ViewBindings.findChildViewById(rootView, id);
      if (busTime == null) {
        break missingId;
      }

      id = R.id.carImage;
      ImageView carImage = ViewBindings.findChildViewById(rootView, id);
      if (carImage == null) {
        break missingId;
      }

      id = R.id.carLayout;
      LinearLayout carLayout = ViewBindings.findChildViewById(rootView, id);
      if (carLayout == null) {
        break missingId;
      }

      id = R.id.carTime;
      TextView carTime = ViewBindings.findChildViewById(rootView, id);
      if (carTime == null) {
        break missingId;
      }

      id = R.id.container_search;
      CardView containerSearch = ViewBindings.findChildViewById(rootView, id);
      if (containerSearch == null) {
        break missingId;
      }

      id = R.id.denoiseTextView;
      TextView denoiseTextView = ViewBindings.findChildViewById(rootView, id);
      if (denoiseTextView == null) {
        break missingId;
      }

      id = R.id.edit_text_search;
      EditText editTextSearch = ViewBindings.findChildViewById(rootView, id);
      if (editTextSearch == null) {
        break missingId;
      }

      id = R.id.frame;
      RelativeLayout frame = ViewBindings.findChildViewById(rootView, id);
      if (frame == null) {
        break missingId;
      }

      id = R.id.generalizeTextView;
      TextView generalizeTextView = ViewBindings.findChildViewById(rootView, id);
      if (generalizeTextView == null) {
        break missingId;
      }

      id = R.id.image_search;
      AppCompatImageView imageSearch = ViewBindings.findChildViewById(rootView, id);
      if (imageSearch == null) {
        break missingId;
      }

      id = R.id.image_view_close;
      AppCompatImageView imageViewClose = ViewBindings.findChildViewById(rootView, id);
      if (imageViewClose == null) {
        break missingId;
      }

      id = R.id.iso_close;
      AppCompatImageView isoClose = ViewBindings.findChildViewById(rootView, id);
      if (isoClose == null) {
        break missingId;
      }

      id = R.id.isochrone_setting;
      LinearLayout isochroneSetting = ViewBindings.findChildViewById(rootView, id);
      if (isochroneSetting == null) {
        break missingId;
      }

      id = R.id.lat;
      TextView lat = ViewBindings.findChildViewById(rootView, id);
      if (lat == null) {
        break missingId;
      }

      id = R.id.longitude;
      TextView longitude = ViewBindings.findChildViewById(rootView, id);
      if (longitude == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.pedistrianImage;
      ImageView pedistrianImage = ViewBindings.findChildViewById(rootView, id);
      if (pedistrianImage == null) {
        break missingId;
      }

      id = R.id.rangeSeekBar;
      SeekBar rangeSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (rangeSeekBar == null) {
        break missingId;
      }

      id = R.id.rangeTextView;
      EditText rangeTextView = ViewBindings.findChildViewById(rootView, id);
      if (rangeTextView == null) {
        break missingId;
      }

      id = R.id.recycler_view_search;
      RecyclerView recyclerViewSearch = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSearch == null) {
        break missingId;
      }

      id = R.id.seekBarDenoise;
      SeekBar seekBarDenoise = ViewBindings.findChildViewById(rootView, id);
      if (seekBarDenoise == null) {
        break missingId;
      }

      id = R.id.seekBarGeneralize;
      SeekBar seekBarGeneralize = ViewBindings.findChildViewById(rootView, id);
      if (seekBarGeneralize == null) {
        break missingId;
      }

      id = R.id.settingsIsochrone;
      AppCompatImageView settingsIsochrone = ViewBindings.findChildViewById(rootView, id);
      if (settingsIsochrone == null) {
        break missingId;
      }

      id = R.id.stepSeekBar;
      SeekBar stepSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (stepSeekBar == null) {
        break missingId;
      }

      id = R.id.stepTextView;
      TextView stepTextView = ViewBindings.findChildViewById(rootView, id);
      if (stepTextView == null) {
        break missingId;
      }

      id = R.id.stepTime;
      TextView stepTime = ViewBindings.findChildViewById(rootView, id);
      if (stepTime == null) {
        break missingId;
      }

      id = R.id.stepValue;
      EditText stepValue = ViewBindings.findChildViewById(rootView, id);
      if (stepValue == null) {
        break missingId;
      }

      id = R.id.timeDenoise;
      TextView timeDenoise = ViewBindings.findChildViewById(rootView, id);
      if (timeDenoise == null) {
        break missingId;
      }

      id = R.id.timeGeneralize;
      TextView timeGeneralize = ViewBindings.findChildViewById(rootView, id);
      if (timeGeneralize == null) {
        break missingId;
      }

      id = R.id.topLayout;
      LinearLayout topLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLayout == null) {
        break missingId;
      }

      id = R.id.truckImage;
      ImageView truckImage = ViewBindings.findChildViewById(rootView, id);
      if (truckImage == null) {
        break missingId;
      }

      id = R.id.truckLayout;
      LinearLayout truckLayout = ViewBindings.findChildViewById(rootView, id);
      if (truckLayout == null) {
        break missingId;
      }

      id = R.id.truckTime;
      TextView truckTime = ViewBindings.findChildViewById(rootView, id);
      if (truckTime == null) {
        break missingId;
      }

      id = R.id.valueDenoise;
      EditText valueDenoise = ViewBindings.findChildViewById(rootView, id);
      if (valueDenoise == null) {
        break missingId;
      }

      id = R.id.valueGeneralize;
      EditText valueGeneralize = ViewBindings.findChildViewById(rootView, id);
      if (valueGeneralize == null) {
        break missingId;
      }

      id = R.id.walkLayout;
      LinearLayout walkLayout = ViewBindings.findChildViewById(rootView, id);
      if (walkLayout == null) {
        break missingId;
      }

      id = R.id.walkTime;
      TextView walkTime = ViewBindings.findChildViewById(rootView, id);
      if (walkTime == null) {
        break missingId;
      }

      return new ActivityIsochroneBinding((FrameLayout) rootView, bicycleLayout, bikeImage,
          bikeTime, bottomView, busImage, busLayout, busTime, carImage, carLayout, carTime,
          containerSearch, denoiseTextView, editTextSearch, frame, generalizeTextView, imageSearch,
          imageViewClose, isoClose, isochroneSetting, lat, longitude, mapView, pedistrianImage,
          rangeSeekBar, rangeTextView, recyclerViewSearch, seekBarDenoise, seekBarGeneralize,
          settingsIsochrone, stepSeekBar, stepTextView, stepTime, stepValue, timeDenoise,
          timeGeneralize, topLayout, truckImage, truckLayout, truckTime, valueDenoise,
          valueGeneralize, walkLayout, walkTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
